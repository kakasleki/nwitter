{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","alt","NweetFactory","userObj","nweet","setNweet","attachmemt","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Navigation","to","displayName","Profile","refreshUser","history","useNavigate","newDisplayName","setNewDisplayName","updateProfile","signOut","AppRouter","isLoggedIn","exact","path","element","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f18b3c70.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\nimport \"firebase/compat/storage\"\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n\n        if(name === \"email\") {\n            setEmail(value);\n        } else if(name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            let data;\n\n            if(newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n                {error}\n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target : {name},\n        } = event;\n\n        let provider;\n        if(name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if(name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n\n        const data = await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <>\n            <div>\n                <AuthForm />\n                <div>\n                    <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                    <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if(ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n\n            if(nweetObj.attachmentUrl !== \"\") {\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n            }\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target : { value },\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text : newNweet });\n        setEditing(false);\n    };\n\n    return (\n        <>\n            <div>\n                {editing ? (\n                    <>\n                        <form onSubmit={onSubmit}>\n                            <input onChange={onChange} value={newNweet} required />\n                            <input type=\"submit\" value=\"Update Nweet\" />\n                        </form>\n                        <button onClick={toggleEditing}>Cancel</button>\n                    </>\n                ) : (\n                    <>\n                        <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && (\n                            <>\n                                <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" alt=\"profile\" />\n                            </>\n                        )}\n                        {isOwner && (\n                            <>\n                                <button onClick={onDeleteClick}>Delete Nweet</button>\n                                <button onClick={toggleEditing}>Edit Nweet</button>\n                            </>\n                        )}\n                    </>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachmemt, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        let attachmentUrl = \"\";\n        if(attachmemt !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachmemt, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n\n        await dbService.collection(\"nweets\").add({\n            text : nweet,\n            createdAt : Date.now(),\n            creatorId : userObj.uid,\n            attachmentUrl\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target : { value },\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target : { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget : { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n                <input type=\"submit\" value=\"Nweet\" />\n                {attachmemt && (\n                    <div>\n                        <img src={attachmemt} width=\"50px\" height=\"50px\"  alt=\"profile\"/>\n                        <button onClick={onClearAttachment}>Clear</button>\n                    </div>\n                )}\n            </form>\n        </>\n    );\n};\n\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot => {\n            const newArray = snapshot.docs.map((document) => ({\n                id: document.id,\n                ...document.data(),\n            }));\n            setNweets(newArray);\n        }));\n    }, []);\n\n    return (\n        <>\n            <NweetFactory userObj={userObj} />\n            <div>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport default Home;","import {Link} from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <>\n            <nav>\n                <ul>\n                    <li>\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n                    </li>\n                </ul>\n            </nav>\n        </>\n    );\n};\n\nexport default Navigation;","import { authService } from \"fbase\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useNavigate();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history(\"/\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target : { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({ displayName : newDisplayName });\n            refreshUser();\n        }\n    };\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName} />\n                <input type=\"submit\" value=\"Update Profile\" />\n            </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    );\n};\n\nexport default Profile;","import { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\n\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />   }\n\n            <Routes>\n                { isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\" element={<Home userObj={userObj} />} />\n                        <Route exact path=\"/profile\" element={<Profile refreshUser={refreshUser} userObj={userObj} />} />\n                    </>\n                ) : (\n                    <Route exact path=\"/\" element={<Auth />} />\n                )}\n            </Routes>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n      authService.onAuthStateChanged((user) => {\n          if(user) {\n              setUserObj({\n                  uid: user.uid,\n                  displayName: user.displayName,\n                  updateProfile: (args) => user.updateProfile(args),\n              });\n          } else {\n              setUserObj(false);\n          }\n          setInit(true);\n      });\n  }, []);\n\n  const refreshUser = () => {\n      const user = authService.currentUser;\n      setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n      });\n  };\n\n  return (\n      <>\n          {init ? (\n              <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\n          ) : (\n              \"initializing...\"\n          )}\n      </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}